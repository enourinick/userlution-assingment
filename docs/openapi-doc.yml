openapi: 3.0.3
info:
  title: Userlution assingment
  license:
    name: MIT
  version: 1.0.0
servers:
  - url: http://localhost/api
tags:
  - name: Authentication
    description: Everything related to authentication apis.
  - name: Product
    description: Everything related to products
  - name: User
    description: Operations about user
paths:
  /login:
    post:
      tags:
        - Authentication
      summary: Authenticate a user using email and password
      operationId: login-user
      requestBody:
        description: User login credntials
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LoginCrdentials'
        required: true
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        '401':
          description: Invalid credntials
        '419':
          description: Invalid csrf cookies (call /sanctum/csrf-cookie)
  /logout:
    post:
      tags:
        - Authentication
      summary: Logout and remove cookies
      operationId: logout-user
      responses:
        '200':
          description: Successful operation
        '401':
          description: Unauthenticated user
        '419':
          description: Invalid csrf cookies (call /sanctum/csrf-cookie)
      security:
        - cookieAuth: []
  /product:
    get:
      tags:
        - Product
      summary: get a paginated list of all products
      operationId: index-products
      parameters:
        - name: page
          in: query
          description: ID of product to return
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedProducts'
        '401':
          description: Unauthenticated
      security:
        - cookieAuth: []
  /product/{productId}:
    get:
      tags:
        - Product
      summary: get a single product by id
      operationId: show-product
      parameters:
        - name: productId
          in: path
          description: ID of product to return
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Product'
        '401':
          description: Unauthenticated
        '403':
          description: Unauthorized (the user should be between 18 to 30 to see products from restricted categories! don't ask me why tho.)
      security:
        - cookieAuth: []
  /user:
    get:
      tags:
        - User
      summary: fetch the current authenticated
      operationId: fetch-current-user
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        '401':
          description: Unauthenticated
      security:
        - cookieAuth: []
  /sanctum/csrf-cookie:
    get:
      tags:
        - Authentication
      summary: Set csrf and xstf tokens
      operationId: sanctum-csrf-cookie
      responses:
        '202':
          description: Successful operation
components:
  schemas:
    LoginCrdentials:
      type: object
      properties:
        email:
          type: string
          example: user@exmaple.com
        password:
          type: string
          example: 123456
    Category:
      type: object
      properties:
        id:
          type: integer
          example: 1
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time
        name:
          type: string
          example: 'Kitchen' 
        has_age_restriction:
          type: boolean
          description: 'if true only users between 18 to 30! are authorized to see products of the category'
          example: false
    Product:
      type: object
      properties:
        id:
          type: integer
          example: 100
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time
        name:
          type: string
          example: 'mixer' 
        image_url:
          type: string
          example: 'https://via.placeholder.com/600x600.png/0044ff?text=quaerat'
        price:
          type: integer
          description: 'Price of the item in USD cents (3000 = 30.00$)'
          example: 3000
        description:
          type: string
          example: 'A perfect mixer!'
        category_id:
          type: integer
          example: 1
        category:
          $ref: '#/components/schemas/Category'
    PaginatedProducts:
      type: object
      properties:
        current_page:
          type: integer
          example: 2
        data:
          type: array
          items:
            $ref: '#/components/schemas/Product'
        first_page_url:
          type: string
          example: 'http://localhost/api/products?page=1'
        from:
          type: integer
          example: 15
        last_page:
          type: integer
          example: 9
        last_page_url:
          type: string
          example: 'http://localhost/api/products?page=9'
        links:
          type: array
          items:
            type: object
            properties:
              url:
                type: string
                example: 'http://localhost/product?page=1'
              label:
                type: string
                example: '&laquo; Previous'
              active:
                type: boolean
                example: false
        next_page_url:
          type: string
          example: 'http://localhost/api/products?page=3'
        path:
          type: string
          example: 'http://localhost/api/products?page=2'
        per_page:
          type: integer
          example: 1
        prev_page_url:
          type: string
          example: 'http://localhost/api/products?page=1'
        to:
          type: integer
          example: 30
        total:
          type: integer
          example: 100
    User:
      type: object
      properties:
        id:
          type: integer
          example: 10
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time
        name:
          type: string
          example: 'James'
        email:
          type: string
          example: 'mixer'
        email_verified_at:
          type: string
          format: date-time
        date_of_birth:
          type: string
          format: date
  securitySchemes:
    cookieAuth:
      type: apiKey
      name: api_key
      in: cookie
